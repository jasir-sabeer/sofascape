<!doctype html>
<html lang="eng">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>SOFASCAPE</title>
    <link rel="icon" href="/img/favicon.png">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <!-- animate CSS -->
    <link rel="stylesheet" href="/css/animate.css">
    <!-- owl carousel CSS -->
    <link rel="stylesheet" href="/css/owl.carousel.min.css">
    <!-- font awesome CSS -->
    <link rel="stylesheet" href="/css/all.css">
    <!-- flaticon CSS -->
    <link rel="stylesheet" href="/css/flaticon.css">
    <link rel="stylesheet" href="/css/themify-icons.css">
    <!-- font awesome CSS -->
    <link rel="stylesheet" href="/css/magnific-popup.css">
    <!-- swiper CSS -->
    <link rel="stylesheet" href="/css/slick.css">
    <!-- style CSS -->
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
      .address-list {
        background-color: #ecfdff;
        padding: 1cm;
        margin-top: 1cm;
        float: left;
        margin-right: .5cm;
        width: 8cm;
  
      }
  
      .form-group {
        display: flex;
      }
  
      .form-control {
        margin-top: .5cm;
      }
  
      .errormessage {
        font-size: 10px;
        color: red;
      }
  
      #savebtn {
        margin-top: .8cm;
      }
  
      .address-list {
        transition: box-shadow 0.3s ease;
        /* Smooth transition */
        cursor: pointer;
        /* Makes the entire section clickable */
      }
  
      .address-list.selected {
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
        /* Shadow effect */
        border: 2px solid #ff3368;
        /* Optional: Highlight border */
        border-radius: 5px;
      }
    </style>
</head>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js" integrity="sha512-AA1Bzp5Q0K1KanKKmvN/4d3IRKVlv9PYgwFPvm32nPO6QS8yH1HO7LbgB1pgiOxPtfeg5zEn2ba64MUcqJx6CA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>


<body>
    <!--::header part start::-->
    <header class="main_menu home_menu">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-12">
                    <nav class="navbar navbar-expand-lg navbar-light">
                        <a class="navbar-brand" href="/homepage"><b>SOFA</b>SCAPE </a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse"
                            data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                            aria-expanded="false" aria-label="Toggle navigation">
                            <span class="menu_icon"><i class="fas fa-bars"></i></span>
                        </button>

                        <div class="collapse navbar-collapse main-menu-item" id="navbarSupportedContent">
                            <ul class="navbar-nav">
                                <li class="nav-item">
                                    <a class="nav-link" href="/homepage">Home</a>
                                </li>
                                <li class="nav-item dropdown">
                                    <a class="nav-link " href="/products">
                                        Shop
                                    </a>
                                    
                                </li>
                                <!-- <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle" href="blog.html" id="navbarDropdown_3"
                                        role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        pages
                                    </a>
                                    <div class="dropdown-menu" aria-labelledby="navbarDropdown_2">
                                        <a class="dropdown-item" href="tracking.html">tracking</a>
                                        <a class="dropdown-item" href="checkout.html">product checkout</a>
                                        <a class="dropdown-item" href="cart.html">shopping cart</a>
                                        <a class="dropdown-item" href="confirmation.html">confirmation</a>
                                        <a class="dropdown-item" href="elements.html">elements</a>
                                    </div>
                                </li> -->
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle" href="blog.html" id="navbarDropdown_2"
                                        role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        More
                                    </a>
                                    <div class="dropdown-menu" aria-labelledby="navbarDropdown_2">
                                        <a class="dropdown-item" href="/wallet"> Wallet</a>
                                        <a class="dropdown-item" href="/orderTable">Orders</a>
                                    </div>
                                </li>
                                
                                <!-- <li class="nav-item">
                                    <a class="nav-link" href="contact.html">Contact</a>
                                </li> -->
                               
                            </ul>
                        </div>
                        <div class="hearer_icon d-flex">
                            <a href="/profile"><i class="fa-solid fa-user"></i></a>
                            <a href="/wishlist"><i class="ti-heart"></i></a>
                            <a style="margin-left: .8cm;"  href="/cartPage"><img src="/img/cart.svg"></a> <span class="badge" style="background-color: red;height: .4cm;border-radius: 50%;"><%= cartCount%></span> <!-- Display the cart count dynamically -->
                               
                            </div>
                        </div>
                    </nav>
                </div>
            </div>
        </div>
        <div class="search_input" id="search_input_box">
            <div class="container ">
              
            </div>
        </div>
    </header>
    <!-- Header part end-->  
  <!--================Home Banner Area =================-->
  <!-- breadcrumb start-->
  <section class="breadcrumb breadcrumb_bg">
    <div class="container">
      <div class="row justify-content-center">
        <div class="col-lg-8">
          <div class="breadcrumb_iner">
            <div class="breadcrumb_iner_item">
              <h2>Product Checkout</h2>
              <p>Home <span>-</span> Shop Single</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
  <!-- breadcrumb start-->

  <!--================Checkout Area =================-->
  <section class="checkout_area padding_top">
    <div class="container">
      <div class="cupon_area">
        <div class="check_title">
          <h2>
            Have a coupon?
            <a href="#">Click here to enter your code</a>
          </h2>
        </div>
        <form id="couponForm">
          <input type="text" placeholder="Enter coupon code" id="coupuncode" name="coupuncode" />
          <button class="tp_btn" type="submit">Apply Coupon</button>
        </form>
        
        <button style="margin-top: .5cm;" class="tp_btn" onclick="removeCoupon() ">Cancel Coupon</button>

        <div style="display: flex;">
          <%coupons.forEach(coupon=>{%>
            <div
              style="width: 5cm;height: 4.5cm;background-color: #ecfdff;margin-top: 1cm;margin-left: 1cm;padding-top: .5cm;">
              <h4 style="margin-left: 1.3cm;"><strong id="couponPercentage">
                  <%= coupon.discountValue %>% offer
                </strong></h4>
                <h5 style="font-size: 10px;margin-left: .8cm;">Minimum Purchase :<%=coupon.minPurchase%></h5>
              <div style="width: 100%;height: 1cm;background-color: #f44a40;">
                <p style="margin-left: 1.5cm;margin-top: .4cm;font-size: 18px;color: #fff;">
                  <%= coupon.code %>
                </p>
              </div>
              <p style="margin-top: .4cm;font-size: 12px;margin-left: .2cm;">Expiry Date:<%= new
                  Date(coupon.expiryDate).toLocaleDateString('en-US', { year: 'numeric' , month: 'long' , day: 'numeric'
                  }) %>
              </p>
            </div>
            <%})%>
        </div>
      </div>
      <div class="billing_details">
        <div class="row">
          <div class="col-lg-8">
            <div class="col-md-12 form-group">
              <% addresses.forEach((address, index) => { %>
                <div>
                  <label class="address-list" for="default-radio-<%= index %>" id="addressList<%= index %>">
                    <input type="radio" name="selectedAddress" value='<%= JSON.stringify(address) %>' onchange="fillBillingDetails(this.value)">
                    <div class="address-item">
                      <p><strong>Name:</strong> <%= address.firstName %> <%= address.lastName %></p>
                      <p><strong>Mobile:</strong> <%= address.phoneNumber %></p>
                      <p><strong>Street:</strong> <%= address.street %></p>
                      <p><strong>City:</strong> <%= address.city %></p>
                      <p><strong>State:</strong> <%= address.state %></p>
                    </div>
                  </label>
                </div>
              <% }); %>
              
            </div>
            
            <h3>Billing Details</h3>
            <form id="addAddressForm" >
              <input type="text" id="firstName" class="form-control" name="firstName" placeholder="Full Name">
              <div id="error1" class="errormessage" aria-live="assertive"></div>
            
              <input type="text" id="email" class="form-control" name="email" placeholder="Email">
              <div id="error3" class="errormessage" aria-live="assertive"></div>
            
              <input type="text" id="phoneNumber" class="form-control" name="phoneNumber" placeholder="Phone Number">
              <div id="error4" class="errormessage" aria-live="assertive"></div>
            
              <input type="text" id="address" class="form-control" name="address" placeholder="Address">
              <div id="error5" class="errormessage" aria-live="assertive"></div>
            
              <input type="text" id="street" class="form-control" name="street" placeholder="Street">
              <div id="error6" class="errormessage" aria-live="assertive"></div>
            
              <input type="text" id="city" class="form-control" name="city" placeholder="City">
              <div id="error7" class="errormessage" aria-live="assertive"></div>
            
              <input type="text" id="state" class="form-control" name="state" placeholder="State">
              <div id="error8" class="errormessage" aria-live="assertive"></div>
            
              <input type="text" id="pincode" class="form-control" name="pincode" placeholder="Pincode">
              <div id="error9" class="errormessage" aria-live="assertive"></div>
            
            <!-- <div class="col-md-12 form-group">
                <div class="creat_account">
                  <input type="checkbox" id="f-option2" name="selector" />
                  <label for="f-option2">Create an account?</label>
                </div>
              </div> -->

            
          </div>
          <div class="col-lg-4">

            <div class="order_box">
              <h2>Your Order</h2>

              <ul class="list">
                <li>
                  <a href="#">Product
                    <span>Total</span>
                  </a>
                </li>
                <% cartProduct.forEach(product=> { %>
                  <li>
                    <a href="#">
                      <%= product.productId.productname %>
                        <span class="middle">x<%=product.quantity%></span>
                        <% if (product.productId.discountPrice && product.productId.discountPrice <
                          product.productId.regularprice) { %>
                          <span class="last">₹<%= (product.productId.discountPrice * product.quantity).toFixed(0) %>
                              </span>
                          <%}else{%>
                            <span class="last">₹<%= (product.productId.regularprice * product.quantity).toFixed(0) %>
                                </span>
                            <%}%>
                    </a>
                  </li>
                  <%})%>
              </ul>
              <ul class="list list_2">
                <li>
                  <a href="#">Subtotal
                    <span id="subtotal">₹<%=subtotal%></span>
                  </a>
                </li>
                <li>
                  <a href="#">Shipping
                    <span>₹50</span>
                  </a>
                </li>
                <li>
                  <a href="#">Total
                    <span id="total">₹<%=subtotal + 50%></span>
                  </a>
                </li>
                <li id="couponRow" style="display: none;">
                  <a href="#">Discount
                    <span id="discountValue"></span>
                  </a>
                <li id="couponRow2" style="display: none;">
                  <a href="#">Total After Discount
                    <span id="totalAfterDiscount"></span>
                  </a>
              </ul>


              <div class="payment_item">
                <% if(subtotal>1000){%>
                  <div class="radion_btn">
                    <input type="radio" id="f-option5" name="paymentMethod" value="CashOnDelivery" disabled />
                    <label for="f-option5" style="color: rgb(107, 103, 103);">Cash On Delivery</label>
                    <div class="check"></div>
                    <p style="font-size: 12px;">Order above Rs 1000 should not be allowed for cash on delivery</p>

                  </div>
                  <%}else{%>
                    <div class="radion_btn">
                      <input type="radio" id="f-option5" name="paymentMethod" value="CashOnDelivery" />
                      <label for="f-option5">Cash On Delivery</label>
                      <div class="check"></div>
                    </div>
                    <%}%>
              </div>
              <div class="payment_item active">
                <div class="radion_btn">
                  <input type="radio" id="f-option6" name="paymentMethod" value="razorpay" />
                  <label for="f-option6">Razorpay</label>
                  <img src="img/product/single-product/card.jpg" alt="" />
                  <div class="check"></div>
                </div>

              </div>
              <div class="payment_item active">
                <div class="radion_btn">
                  <input type="radio" id="f-option7" name="paymentMethod" value="wallet" />
                  <label for="f-option7">Wallet</label>
                  <div class="check"></div>
                </div>
              </div>
             
              <button type="button"  class="btn_3"   onclick="submitOrder()">Place Order</button>
              
            </div>

          </div>
        </form>

        </div>
      </div>
    </div>
  </section>
  <!--================End Checkout Area =================-->

  <%-include("../partials/user/footer")%>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>
 document.addEventListener("DOMContentLoaded", () => {
  const addressLists = document.querySelectorAll(".address-list");
  const radios = document.querySelectorAll('input[name="selectedAddress"]');

  addressLists.forEach((addressList, index) => {
    addressList.addEventListener("click", () => {
      // Remove 'selected' class from all address lists
      addressLists.forEach(list => list.classList.remove("selected"));
      
      // Add 'selected' class to the clicked address list
      addressList.classList.add("selected");
      
      // Check the radio button when the div is clicked
      radios[index].checked = true;

      // Call the function to fill the billing details
      fillBillingDetails(radios[index].value);
    });
  });
});

function fillBillingDetails(selectedAddress) {
  try {
    const addressObj = JSON.parse(selectedAddress);
    document.getElementById("firstName").value = `${addressObj.firstName || ""} ${addressObj.lastName || ""}`;
    document.getElementById("email").value = addressObj.email || "";
    document.getElementById("phoneNumber").value = addressObj.phoneNumber || "";
    document.getElementById("address").value = addressObj.address || "";
    document.getElementById("street").value = addressObj.street || "";
    document.getElementById("city").value = addressObj.city || "";
    document.getElementById("state").value = addressObj.state || "";
    document.getElementById("pincode").value = addressObj.pincode || "";
  } catch (error) {
    console.error("Error parsing address object:", error);
  }
}


function validateField(value, pattern, errorElement, errorMessage) {
  if (!value.trim()) {
    errorElement.textContent = `${errorMessage} is required`;
    errorElement.classList.add("show-error");
    return false;
  } else if (!pattern.test(value.trim())) {
    errorElement.textContent = `Please enter a valid ${errorMessage}`;
    errorElement.classList.add("show-error");
    return false;
  } else {
    errorElement.textContent = "";
    errorElement.classList.remove("show-error");
    return true;
  }
}

function firstNameValidateChecking() {
  const nameInput = document.getElementById("firstName").value;
  const usernamePattern = /^[a-zA-Z\s]{3,}$/;
  return validateField(nameInput, usernamePattern, document.getElementById("error1"), "First name");
}

function emailValidateChecking() {
  const emailInput = document.getElementById("email").value;
  const emailPattern = /^[^ ]+@[^ ]+\.[a-z]{2,3}$/;
  return validateField(emailInput, emailPattern, document.getElementById("error3"), "Email");
}

function phoneNumberValidateChecking() {
  const phoneInput = document.getElementById("phoneNumber").value;
  const phonePattern = /^[0-9]{10}$/;
  return validateField(phoneInput, phonePattern, document.getElementById("error4"), "Phone number");
}

function addressValidateChecking() {
  const addressInput = document.getElementById("address").value;
  return validateField(addressInput, /.+/, document.getElementById("error5"), "Address");
}

function streetValidateChecking() {
  const streetInput = document.getElementById("street").value;
  return validateField(streetInput, /.+/, document.getElementById("error6"), "Street");
}

function cityValidateChecking() {
  const cityInput = document.getElementById("city").value;
  return validateField(cityInput, /.+/, document.getElementById("error7"), "City");
}

function stateValidateChecking() {
  const stateInput = document.getElementById("state").value;
  const statePattern = /^[a-zA-Z\s]{3,}$/;
  return validateField(stateInput, statePattern, document.getElementById("error8"), "State");
}

function pincodeValidateChecking() {
  const pincodeInput = document.getElementById("pincode").value;
  const pincodePattern = /^[0-9]{6}$/;
  return validateField(pincodeInput, pincodePattern, document.getElementById("error9"), "Pincode");
}

function runValidation() {
  const validations = [
    firstNameValidateChecking(),
    emailValidateChecking(),
    phoneNumberValidateChecking(),
    addressValidateChecking(),
    streetValidateChecking(),
    cityValidateChecking(),
    stateValidateChecking(),
    pincodeValidateChecking()
  ];

  return validations.every(validation => validation);
}

function submitOrder() {
  if (!runValidation()) {
    Swal.fire({
      title: "Error!",
      text: "Please fix the validation errors before placing the order.",
      icon: "error",
      confirmButtonText: "OK"
    });
    return false;
  }

  const selectedAddressElement = document.querySelector('input[name="selectedAddress"]:checked');
  const paymentMethodElement = document.querySelector('input[name="paymentMethod"]:checked');

  if (!selectedAddressElement) {
    Swal.fire({
      title: "Error!",
      text: "Please select an address.",
      icon: "error",
      confirmButtonText: "OK"
    });
    return false;
  }

  if (!paymentMethodElement) {
    Swal.fire({
      title: "Error!",
      text: "Please select a payment method.",
      icon: "error",
      confirmButtonText: "OK"
    });
    return false;
  }
  const selectedAddress = selectedAddressElement.value;
  const paymentMethod = paymentMethodElement.value;
  const couponCodeElement = document.getElementById("coupuncode"); 
  const couponCode = couponCodeElement ? couponCodeElement.value : null; 
  const couponDiscountElement = document.getElementById("discountValue");
  const couponDiscountValue = couponDiscountElement ? couponDiscountElement.innerText : "0";
  const finalDiscountElement = document.getElementById("totalAfterDiscount");
  const finalDiscountAmount = finalDiscountElement ? finalDiscountElement.innerText : "0";
  const couponPercentageElement = document.getElementById("couponPercentage");
  const couponPercentage = couponPercentageElement ? couponPercentageElement.innerText : "0";
  const fullName=document.getElementById('firstName').value;
  const email=document.getElementById('email').value;
  const phoneNumber=document.getElementById('phoneNumber').value;
  const address=document.getElementById('address').value;
  const street=document.getElementById('street').value;
  const city=document.getElementById('city').value;
  const state=document.getElementById('state').value;
  const pincode=document.getElementById('pincode').value;


  const addressItems={
      customerName:fullName,
      email:email,
      phone:phoneNumber,
      address:address ,
      street:street,
      city:city,
      state:state ,
      pincode:pincode

  }


  const cartItems = [];
  '<% cartProduct.forEach(function(product) { %>';
  cartItems.push({
      productId: "<%= product.productId._id %>",
      quantity: '<%= product.quantity %>',
      price: Number('<%= product.productId.discountPrice || product.productId.regularprice %>'),
      name: "<%= product.productId.productname %>",
      image: '<%= product.productId.images[0] %>',
      status: "Pending",
  });
  '<% }); %>';

  const orderData = {
    addressItems: addressItems,
      cartItems: cartItems,
      subtotal: '<%= subtotal %>',
      shippingCost: 50,
      total: '<%= total %>',
      paymentMethod: paymentMethod,
      couponCode: couponCode, 
      couponDiscountValue: Number(couponDiscountValue.replace(/[^0-9.-]+/g, "")),
      finalDiscountAmount: Number(finalDiscountAmount.replace(/[^0-9.-]+/g, "")),
      couponPercentage: Number(couponPercentage.replace(/[^0-9.-]+/g, ""))

  };

  if (paymentMethod === "razorpay") {
      createRazorpayOrder(orderData);
  } else if (paymentMethod === "CashOnDelivery") {
      submitOrderToBackend(orderData);
  }else if (paymentMethod === "wallet") {
    createWalletOrder(orderData);

    }
}
//CashOnDelivery
      function submitOrderToBackend(orderData) {
        fetch('/checkout', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(orderData)
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              window.location.href = ` /thankyou?orderId=${data.orderId}`;
            } else {
              Swal.fire({
                title: 'Error!',
                text: data.message || 'Failed to place order. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK'
              });
              console.log('eeeeer', data);

            }
          })
          .catch(error => {
            console.error('Error submitting order:', error);
            Swal.fire({
              title: 'Error!',
              text: 'An unexpected error occurred. Please try again.',
              icon: 'error',
              confirmButtonText: 'OK'
            });
          });
      }
//razorpay
      function createRazorpayOrder(orderData) {
        fetch('/create-order', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(orderData)
        })
          .then(response => response.json())
          .then(data => {
            if (!data.success) {
              throw new Error(data.error || 'Failed to create Razorpay order');
            }

            const razorpayOptions = {
              key: 'rzp_test_PK79kuFlXvgTpG',
              amount: data.amount,
              currency: 'INR',
              name: 'Sofascape',
              description: 'Order Payment',
              order_id: data.orderId,
              handler: function (response) {
                handlePaymentSuccess(response, orderData, 'Completed');
              },
              prefill: {
                name: 'John Doe',
                email: 'john.doe@example.com',
                contact: '9999999999'
              },
              modal: {
                ondismiss: function () {
                  handlePaymentFailure(orderData, 'Failed');
                }
              }
            };

            const razorpay = new Razorpay(razorpayOptions);
            razorpay.open();
          })
          .catch(error => {
            console.error('Error in Razorpay integration:', error.message);
            Swal.fire({
              title: 'Error!',
              text: 'Failed to initialize Razorpay. Please try again.',
              icon: 'error',
              confirmButtonText: 'OK'
            });
          });
      }

      function handlePaymentSuccess(response, orderData, paymentStatus) {
        orderData.paymentStatus = paymentStatus || 'Completed';

        orderData.paymentDetails = {
          razorpay_payment_id: response.razorpay_payment_id,
          razorpay_order_id: response.razorpay_order_id,
          razorpay_signature: response.razorpay_signature
        };

        fetch('/checkout', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(orderData)
        })
          .then(response => response.json())
          .then(data => {
            if (data.message) {
              window.location.href = `/thankyou?orderId=${data.orderId}`;

            } else {
              Swal.fire({
                title: 'Error!',
                text: 'Failed to place order. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK'
              });
            }
          })
          .catch(error => {
            console.error('Error submitting order:', error);
            Swal.fire({
              title: 'Error!',
              text: 'Failed to submit order. Please try again.',
              icon: 'error',
              confirmButtonText: 'OK'
            });
          });
      }


      function handlePaymentFailure(orderData, paymentStatus) {
        orderData.paymentStatus = paymentStatus || 'Failed';
        fetch('/checkout', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(orderData)
        })
          .then(response => response.json())
          .then(data => {
            if (data.message) {
              window.location.href = '/orderTable';
            } else {
              Swal.fire({
                title: 'Error!',
                text: 'Failed to place order. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK'
              });
            }
          })
          .catch(error => {
            console.error('Error submitting order:', error);
            Swal.fire({
              title: 'Error!',
              text: 'Failed to submit order. Please try again.',
              icon: 'error',
              confirmButtonText: 'OK'
            });
          });
      }

      //wallet Payment
      function createWalletOrder(orderData) {
    fetch('/checkout', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(orderData),
    })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                window.location.href = `/thankyou?orderId=${data.orderId}`;
            } else {
                console.error('Order placement error:', data.message);

                Swal.fire({
                    title: 'Error!',
                    text: data.message || 'Failed to place order. Please try again.',
                    icon: 'error',
                    confirmButtonText: 'OK',
                });
            }
        })
        .catch(error => {
            console.error('Unexpected error during order submission:', error);

            Swal.fire({
                title: 'Error!',
                text: 'An unexpected error occurred. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK',
            });
        });
}

      // Coupon Application
      document.getElementById('couponForm').addEventListener('submit', async (event) => {
        event.preventDefault();
        const coupuncode = document.getElementById('coupuncode').value;
        

        try {
          const response = await fetch('/discount', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ coupuncode })
          });

          if (response.ok) {
            const data = await response.json();

            document.getElementById("couponRow").style.display = "block";
            discountValue.innerText = `₹${data.discountAmount}`;
            document.getElementById("couponRow2").style.display = "block";
            totalAfterDiscount.innerText = `₹${data.afterCoupon + 50}`;
            Swal.fire({
              title: 'Success!',
              text: `Coupon applied! Discount: ${data.discountCode.discountValue}%`,
              icon: 'success',
              confirmButtonText: 'OK'
            });
          } else {
            const error = await response.json();
            Swal.fire({
              title: 'Error!',
              text: error.message || 'Failed to apply coupon. Please try again.',
              icon: 'error',
              confirmButtonText: 'OK'
            });
          }
        } catch (err) {
          console.error('Fetch error:', err);
          Swal.fire({
            title: 'Error!',
            text: 'An unexpected error occurred. Please try again.',
            icon: 'error',
            confirmButtonText: 'OK'
          });
        }
      });

//remove coupon
  function removeCoupon() {
  const couponCode = document.getElementById("coupuncode")?.value;

  if (!couponCode) {
    Swal.fire({
      title: 'No Coupon Found!',
      text: 'Please apply a coupon code before trying to remove it.',
      icon: 'warning',
      confirmButtonText: 'OK'
    });
    return;
  }

  document.getElementById("couponRow").style.display = 'none';
  document.getElementById("couponRow2").style.display = 'none';
  document.getElementById("coupuncode").value = '';

  const subtotal = parseFloat(document.getElementById("subtotal").textContent.replace("₹", ""));
  
  document.getElementById("total").textContent = "₹" + subtotal.toFixed(2);

  Swal.fire({
    title: 'Success!',
    text: 'Coupon removed. No discount applied.',
    icon: 'success',
    confirmButtonText: 'OK'
  });
}

</script>