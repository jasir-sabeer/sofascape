<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
        integrity="sha384-k6RqeWeci5ZR/Lv4MR0sA0FfDOM97Dk4t3nA4q2Vo9mltpbBRj52R4mGowWbA2xB" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">

    <style>
        /* General Styles */
        * {
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
            /* Light background color */
        }

        .sidebar {
            width: 250px;
            background-color: #333;
            /* Dark sidebar color */
            color: #fff;
            /* White text color */
            height: 100vh;
            /* Full height */
            position: fixed;
            /* Fixed sidebar */
        }

        .sidebar {
            text-align: center;
            padding: 10px 0;
        }

        .sidebar ul {
            list-style: none;
            /* Remove bullet points */
            padding: 0;
        }

        .sidebar a {
            color: #fff;
            text-decoration: none;
            padding: 10px 15px;
            display: block;
            transition: background 0.3s;
        }

        .sidebar a:hover {
            background-color: #555;
            /* Darker background on hover */
        }

        .logoutbtn {
            background-color: #333;
            block-size: 40px;
            border: none;
            color: #fff;
            width: 250px;
        }

        .logoutbtn:hover {
            background-color: darkred;
        }

        .main-content {
            margin-left: 250px;
            /* Space for the sidebar */
            padding: 20px;
        }

        .dashboard-header {
            display: flex;
            /* Flexbox layout */
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .overview-cards {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
            margin-bottom: 30px;
        }

        .card {
            background-color: #ffffff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        .search-bar {
            margin-top: 15px;
        }

        .search-bar input {
            width: 100%;
            padding: 8px;
            font-size: 16px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .recent-orders,
        .user-table {
            background-color: #ffffff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-top: 30px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        thead {
            background-color: #333;
            color: #ffffff;
        }

        tbody tr {
            border-bottom: 1px solid #ccc;
        }

        tbody tr:nth-child(even) {
            background-color: #f4f4f9;
        }




        .block-btn {
            background-color: rgb(255, 0, 0);/
        }

        .unblock-btn {
            background-color: rgb(0, 234, 62);
        }

        .user-profile {
            display: flex;
            align-items: center;
        }

        .user-profile img {
            border-radius: 50%;
            margin-right: 10px;
        }


        table th,
        table td {
            padding: 10px;
            text-align: left;
        }


        table th:last-child,
        table td:last-child {
            text-align: center;
            width: 120px;
        }

        .action-buttons {
            display: flex;
            justify-content: center;
            gap: 10px;
        }

        table,
        th,
        td {
            font-size: 16px;
            font-family: Arial, sans-serif;
        }

        .main-content {
            margin-left: 250px;
        }

        .buttons {
            display: flex;
            justify-content: center;
            gap: 10px;
        }

        .modal {
            display: none;
            /* Hidden by default */
            position: fixed;
            /* Stay in place */
            z-index: 1;
            /* Sit on top */
            left: 0;
            top: 0;
            width: 100%;
            /* Full width */
            height: 100%;
            /* Full height */
            background-color: rgba(0, 0, 0, 0.5);
            /* Black with opacity */
            justify-content: center;
            /* Center horizontally */
            align-items: center;
            /* Center vertically */
            display: flex;
            /* Flexbox for centering */
        }

        .modal-content {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            width: 80%;
            /* Adjust this value to control modal width */
            max-width: 700px;
            /* Set a maximum width */
            height: auto;
            /* Allow height to adjust based on content */
            max-height: 80vh;
            /* Set a maximum height to prevent overflow */
            overflow-y: auto;
            /* Enable vertical scrolling if content exceeds max height */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            position: relative;
            bottom: 180px;
        }

        /* Modal Heading */
        .modal-content h2 {
            text-align: center;
            margin-bottom: 20px;
            font-family: 'Arial', sans-serif;
            font-weight: 600;
            font-size: 22px;
            /* Adjusted for better spacing */
            color: #333;
        }



        .close:hover {
            color: #000;
        }

        /* Form Styling */
        form {
            display: flex;
            flex-direction: column;
        }

        label {
            margin-bottom: 8px;
            font-size: 14px;
            color: #555;
            font-weight: 500;
        }

        input[type="text"],
        input[type="number"],
        textarea,
        select {
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 6px;
            margin-bottom: 15px;
            /* Reduced for better spacing */
            font-size: 14px;
            width: 100%;
        }

        textarea {
            height: 80px;
            /* Reduced height for description */
        }

        input[type="text"]:focus,
        input[type="number"]:focus,
        textarea:focus,
        select:focus {
            outline: none;
            border-color: #66afe9;
            box-shadow: 0 0 8px rgba(102, 175, 233, 0.6);
        }

        /* Add Product Button */
        .btn {
            padding: 12px;
            background-color: #333;
            color: white;
            border: none;
            border-radius: 6px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            text-align: center;
            gap: 600px;

        }

        .btn:hover {
            background-color: #000000;
        }

        /* Animation */
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: scale(0.9);
            }

            to {
                opacity: 1;
                transform: scale(1);
            }
        }

        /* Responsive Styles */
        @media (max-width: 768px) {
            .modal-content {
                width: 90%;
                /* Full width on smaller screens */
                padding: 15px;
            }
        }

        /* Form Styling */
        /* Form Styling */
        form {
            display: flex;
            flex-direction: column;
        }

        label {
            margin-bottom: 8px;
            font-size: 14px;
            color: #555;
            font-weight: 500;
        }

        input[type="text"],
        input[type="number"],
        textarea,
        select {
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 6px;
            margin-bottom: 15px;
            /* Reduced for better spacing */
            font-size: 14px;
            width: calc(100% - 22px);
            /* Adjust width for padding */
            margin-left: 10px;
            /* Add left margin */
        }

        textarea {
            height: 80px;
            /* Fixed height */
            resize: none;
            /* Disable resizing */
            width: calc(100% - 22px);
            /* Adjust width for padding */
            margin-left: 10px;
            /* Add left margin */
        }

        input[type="text"]:focus,
        input[type="number"]:focus,
        textarea:focus,
        select:focus {
            outline: none;
            border-color: #66afe9;
            box-shadow: 0 0 8px rgba(102, 175, 233, 0.6);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            /* 15% from the top and centered */
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            /* Could be more or less, depending on screen size */
            position: relative;
            /* Allows absolute positioning of child elements */
        }

        .close {
            position: absolute;
            /* Position the close button absolutely */
            top: 10px;
            /* Adjust this value to position it at the top of the modal */
            right: 20px;
            /* Adjust this value for horizontal positioning */
            font-size: 24px;
            /* Adjust font size as needed */
            color: #000;
            /* Change color if desired */
            cursor: pointer;
            /* Change cursor to pointer */
        }


        .add-btn {
            padding: 12px;
            background-color: #333;
            color: white;
            border: none;
            border-radius: 6px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            text-align: center;

        }

        /* Container for file input */
        input[type="file"] {
            display: none;
            /* Hide the default file input */
        }

        /* Style for custom file upload button */
        .file-upload-label {
            display: inline-block;
            padding: 10px 20px;
            background-color: #333;
            color: white;
            cursor: pointer;
            font-size: 14px;
            border-radius: 5px;
            margin-top: 10px;
            transition: background-color 0.3s ease;
        }

        /* Style for hover effect on the upload button */
        .file-upload-label:hover {
            background-color: #45a049;
        }

        .navbar-brand {

            padding-top: 20px;
            padding-bottom: 20px;
            font-size: xx-large;
            font-weight: 600;

        }

        .modal #pagination {
            display: none;
        }

        .special-color {
            background-color: #555;
        }

        .page-item {
            float: left;
        }

        .page-link {
            text-decoration: none;
            margin: 15px;
            display: inline-block;
            padding: 8px 12px;
            margin: 0 4px;
            border: 1px solid #ddd;
            border-radius: 4px;
            text-decoration: none;
            color: #333;
        }

        .paginationdiv {
            margin-left: 8cm;
        }
    </style>



    <aside class="sidebar">
        <h2 style="margin-left: .5cm;"><b>SOFA</b>SCAPE</h2>
        <nav>
            <ul>
                <li><a href="/admin/dashboard">Home</a></li>
                <li><a href="/admin/userManagement">Users</a></li>
                <li><a href="/admin/productManagement">Products</a></li>
                <li><a href="/admin/categoryManagement">Category </a></li>
                <li><a href="/admin/orderManagement">Orders</a></li>
                <li><a href="/admin/inventoryManagement">inventory</a></li>
                <li><a href="/admin/couponManagement">Coupon</a></li>
                <li><a href="/admin/offerManagement">Offer</a></li>
                <li><a href="/admin/salesReport" class="special-color">Sales Reports</a></li>
                <li><a href="#profile">Profile</a></li>
                <form action="/admin/logout" method="POST">
                    <button type="submit" class="logoutbtn">Logout</button>
                </form>
            </ul>
        </nav>
    </aside>

    <div class="main-content">
        <header class="dashboard-header">
            <h1>Sales Report</h1>


        </header>
        <div style="margin-bottom: 1cm;">
            <!-- Filter Options -->
            <div id="filters" style="display: flex;">
                <label for="fromDate">From Date</label>
                <input type="date" name="fromDate" id="fromDate" style="height: 1cm;">
                <span id="fromDateError" style="color: red; display: none;"></span>
                <br>
                <label for="toDate">To Date</label>
                <input type="date" name="toDate" id="toDate" style="height: 1cm;">
                <div id="toDateError" style="color: red; display: none;"></div>
                <br><br>
                <select name="quickRange" id="quickRange" style="width: 5cm;">
                    <option value="">Select</option>
                    <option value="1week">Last Week</option>
                    <option value="1month">Last Month</option>
                    <option value="1day">Last day</option>
                </select>
            </div>

            <!-- Download Buttons -->
            <div class="report-download-buttons">
                <a style="margin-left: 17cm;margin-bottom: .5cm;" id="downloadPDFBtn" class="btn btn-primary">Download
                    PDF</a>
                <a id="downloadExcelBtn" class="btn btn-success">Download Excel</a>
            </div>
        </div>
        <section class="product-table">
            <div class="table-container">
                <table>
                    <thead>
                      <tr>
                        <th>Date</th>
                        <th>Order Count</th>
                        <th>Total Sales</th>
                        <th>Total Discount</th>
                        <th>Net Sales</th>
                      </tr>
                    </thead>
                    <tbody id="salesReportBody">
                      <% dailyReport.forEach(report => { %>
                        <tr>
                          <td><%= report.date %></td>
                          <td><%= report.totalOrders %></td>
                          <td><%= report.totalAmount %></td>
                          <td><%= report.totalDiscount %></td>
                          <td><%= report.netSales %></td>
                        </tr>
                      <% }); %>
                    </tbody>
                  </table>
                  
                <div class="main">
                    <div class="sales-summary">
                        <div class="summary-item">
                            <strong>Overall Order Count:</strong>
                            <span>
                                <%=overallOrderCount%>
                            </span>
                        </div>
                        <div class="summary-item">
                            <strong>Overall Sales Amount (₹):</strong>
                            <span>
                                <%= formatNumber(overallTotalSales) %>
                                
                            </span>
                        </div>
                        <div class="summary-item">
                            <strong>Overall Discount (₹):</strong>
                            <span>
                            <%= formatNumber(overallTotalDiscount) %>
                                
                            </span>
                        </div>
                        <div class="summary-item">
                            <strong>Overall Net Sales (₹):</strong>
                            <span>
                                <%= formatNumber(overallNetSales) %>

                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
    const salesReportBody = document.getElementById('salesReportBody');

    const updateSalesReport = (filter) => {
        fetch('/admin/salesReport/filter', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(filter),
        })
            .then((response) => {
                if (!response.ok) throw new Error('Failed to fetch sales report data');
                return response.json();
            })
            .then((data) => {
                salesReportBody.innerHTML = '';
                if (data.dailyReport && data.dailyReport.length > 0) {
                    data.dailyReport.forEach((report) => {
                        const row = `
                            <tr>
                                <td>${new Date(report.date).toLocaleDateString("en-US", {
                                    year: "numeric",
                                    month: "long",
                                    day: "numeric",
                                })}</td>
                                <td>${report.totalOrders}</td>
                                <td>${formatNumber(report.totalAmount)}</td>
                                <td>${formatNumber(report.totalDiscount)}</td>
                                <td>${formatNumber(report.netSales)}</td>
                            </tr>
                        `;
                        salesReportBody.insertAdjacentHTML('beforeend', row);
                    });
                } else {
                    salesReportBody.innerHTML = '<tr><td colspan="5">No data available for the selected range.</td></tr>';
                }
            })
            .catch((error) => console.error('Error:', error));
    };

    const formatNumber = (num) => {
        return new Intl.NumberFormat().format(num);
    };

    const addEventListeners = () => {
        const singleDayElement = document.getElementById('singleDay');
        if (singleDayElement) {
            singleDayElement.addEventListener('change', (event) => {
                const singleDay = event.target.value;
                updateSalesReport({ specificDay: singleDay });
            });
        }

        const quickRangeElement = document.getElementById('quickRange');
        if (quickRangeElement) {
            quickRangeElement.addEventListener('change', (event) => {
                const quickRange = event.target.value;
                updateSalesReport({ quickRange });
            });
        }

        const fromDateElement = document.getElementById('fromDate');
        const toDateElement = document.getElementById('toDate');

        if (fromDateElement) {
            fromDateElement.addEventListener('change', (event) => {
                const fromDate = event.target.value;
                const toDate = toDateElement ? toDateElement.value : '';
                updateSalesReport({ fromDate, toDate });
            });
        }

        if (toDateElement) {
            toDateElement.addEventListener('change', (event) => {
                const toDate = event.target.value;
                const fromDate = fromDateElement ? fromDateElement.value : '';
                updateSalesReport({ fromDate, toDate });
            });
        }
    };

    
    if (salesReportBody) {
        addEventListeners();
    } else {
        console.error("Sales report body element not found in DOM");
    }
});

    </script>
<script>
    // downloadPDF

document.getElementById('downloadPDFBtn').addEventListener('click', function () {
    const tableData = captureTableData();
         fetch('/admin/sales-report/download/pdf', {
            method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ salesData: tableData })
                  })

                .then(response => response.blob())
                .then(blob => {
                    const link = document.createElement('a');
                    link.href = URL.createObjectURL(blob);
                    link.download = 'sales_report.pdf';
                    link.click();
                })
                .catch(error => {
                    console.error('Error generating PDF:', error);
                });
        });

//  download exel file       
        document.getElementById('downloadExcelBtn').addEventListener('click', function () {
            const tableData = captureTableData();

            fetch('/admin/sales-report/download/excel', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ salesData: tableData })
            })
                .then(response => response.blob())
                .then(blob => {
                    const link = document.createElement('a');
                    link.href = URL.createObjectURL(blob);
                    link.download = 'sales_report.xlsx';
                    link.click();
                })
                .catch(error => {
                    console.error('Error generating Excel:', error);
                });
        });

// capture data
function captureTableData() {
    const rows = document.querySelectorAll('#salesReportBody tr'); 
    const data = [];
    rows.forEach(row => {
        const columns = row.querySelectorAll('td');
        if (columns.length === 5) { 
            const rowData = {
                date: columns[0].textContent.trim(),
                orderCount: columns[1].textContent.trim(),
                totalSales: columns[2].textContent.trim(),
                discount: columns[3].textContent.trim(),
                netSales: columns[4].textContent.trim(),
            };
            data.push(rowData);
        }
    });
    return data;
}

</script>
  <!--validate end and start date -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const fromDateInput = document.getElementById("fromDate");
            const toDateInput = document.getElementById("toDate");
            const fromDateError = document.getElementById("fromDateError");
            const toDateError = document.getElementById("toDateError");

            const today = new Date().toISOString().split("T")[0];
            fromDateInput.setAttribute("max", today);
            toDateInput.setAttribute("max", today);

            function validateDates() {
                let isValid = true;

                if (!fromDateInput.value) {
                    fromDateError.style.display = "inline";
                    fromDateError.textContent = "";
                    isValid = false;
                } else if (new Date(fromDateInput.value) > new Date(today)) {
                    fromDateError.style.display = "inline";
                    fromDateError.textContent = "From Date cannot be greater than today.";
                    isValid = false;
                } else {
                    fromDateError.style.display = "none";
                }

                if (!toDateInput.value) {
                    toDateError.style.display = "inline";
                    toDateError.textContent = "";
                    isValid = false;
                } else if (new Date(toDateInput.value) > new Date(today)) {
                    toDateError.style.display = "inline";
                    toDateError.textContent = "To Date cannot be greater than today.";
                    isValid = false;
                } else {
                    toDateError.style.display = "none";
                }

                if (fromDateInput.value && toDateInput.value) {
                    const fromDate = new Date(fromDateInput.value);
                    const toDate = new Date(toDateInput.value);

                    if (fromDate > toDate) {
                        toDateError.textContent = "To Date must be later than From Date.";
                        toDateError.style.display = "inline";
                        isValid = false;
                    } else {
                        toDateError.style.display = "none";
                    }
                }

                return isValid;
            }

            fromDateInput.addEventListener("change", validateDates);
            toDateInput.addEventListener("change", validateDates);

            validateDates();
        });

    </script>